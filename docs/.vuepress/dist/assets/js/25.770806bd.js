(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{298:function(t,s,a){t.exports=a.p+"assets/img/001_forin循环流程图.cda0f030.png"},299:function(t,s,a){t.exports=a.p+"assets/img/002_元组示意图.27385eff.png"},300:function(t,s,a){t.exports=a.p+"assets/img/003_字典示意图.b20efc78.png"},301:function(t,s,a){t.exports=a.p+"assets/img/004_字符串索引示意图.bdcfa7e3.png"},302:function(t,s,a){t.exports=a.p+"assets/img/005_可变类型和不可变类型.b92b4917.png"},472:function(t,s,a){"use strict";a.r(s);var n=a(8),_=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"python语法规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#python语法规则"}},[t._v("#")]),t._v(" python语法规则")]),t._v(" "),s("p",[t._v("python的格式十分严格，每行代码前面不要增加空格（代码有循环等逻辑的除外），否则会出现缩进错误。"),s("br"),t._v(" "),s("code",[t._v("python 2.x")]),t._v("默认不支持中文，它的解释器名称是"),s("code",[t._v("python")]),t._v("。"),s("br"),t._v(" "),s("code",[t._v("python 3.x")]),t._v("的解释器支持中文，它的解释器名称是"),s("code",[t._v("python3")]),t._v("。"),s("br"),t._v("\n在终端中直接运行python解释器，退出时用"),s("code",[t._v("exit()")]),t._v("或者"),s("code",[t._v("ctrl + d")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"算术运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算术运算符"}},[t._v("#")]),t._v(" 算术运算符")]),t._v(" "),s("h3",{attrs:{id:"基本运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本运算符"}},[t._v("#")]),t._v(" 基本运算符")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("运算符")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("描述")]),t._v(" "),s("th",[t._v("实例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("//")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("取整除")]),t._v(" "),s("td",[t._v("返回除法的整数部分（商） 9 // 2 输出结果 4")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("%")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("取余数")]),t._v(" "),s("td",[t._v("返回除法的余数 9 % 2 = 1")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("**")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("幂")]),t._v(" "),s("td",[t._v("又称次方、乘方，2 ** 3 = 8")])])])]),t._v(" "),s("p",[t._v("在 Python 中 "),s("code",[t._v("*")]),t._v(" 运算符还可以用于字符串，计算结果就是字符串重复指定次数的结果")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("In "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\nOut"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'----------'")]),t._v(" \n")])])]),s("h2",{attrs:{id:"赋值运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算符"}},[t._v("#")]),t._v(" 赋值运算符")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("运算符")]),t._v(" "),s("th",[t._v("描述")]),t._v(" "),s("th",[t._v("实例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("=")]),t._v(" "),s("td",[t._v("简单的赋值运算符")]),t._v(" "),s("td",[t._v("c = a + b 将 a + b 的运算结果赋值为 c")])]),t._v(" "),s("tr",[s("td",[t._v("+=")]),t._v(" "),s("td",[t._v("加法赋值运算符")]),t._v(" "),s("td",[t._v("c += a 等效于 c = c + a")])]),t._v(" "),s("tr",[s("td",[t._v("-=")]),t._v(" "),s("td",[t._v("减法赋值运算符")]),t._v(" "),s("td",[t._v("c -= a 等效于 c = c - a")])]),t._v(" "),s("tr",[s("td",[t._v("*=")]),t._v(" "),s("td",[t._v("乘法赋值运算符")]),t._v(" "),s("td",[t._v("c *= a 等效于 c = c * a")])]),t._v(" "),s("tr",[s("td",[t._v("/=")]),t._v(" "),s("td",[t._v("除法赋值运算符")]),t._v(" "),s("td",[t._v("c /= a 等效于 c = c / a")])]),t._v(" "),s("tr",[s("td",[t._v("//=")]),t._v(" "),s("td",[t._v("取整除赋值运算符")]),t._v(" "),s("td",[t._v("c //= a 等效于 c = c // a")])]),t._v(" "),s("tr",[s("td",[t._v("%=")]),t._v(" "),s("td",[t._v("取 "),s("strong",[t._v("模")]),t._v(" (余数)赋值运算符")]),t._v(" "),s("td",[t._v("c %= a 等效于 c = c % a")])]),t._v(" "),s("tr",[s("td",[t._v("**=")]),t._v(" "),s("td",[t._v("幂赋值运算符")]),t._v(" "),s("td",[t._v("c **= a 等效于 c = c ** a")])])])]),t._v(" "),s("h2",{attrs:{id:"运算符的优先级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符的优先级"}},[t._v("#")]),t._v(" 运算符的优先级")]),t._v(" "),s("ul",[s("li",[t._v("同级运算符是 "),s("strong",[t._v("从左至右")]),t._v(" 计算")]),t._v(" "),s("li",[t._v("可以使用 "),s("code",[t._v("()")]),t._v(" 调整计算的优先级")]),t._v(" "),s("li",[t._v("以下表格的运算符优先级由高到最低顺序排列")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("运算符")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("**")]),t._v(" "),s("td",[t._v("幂 (最高优先级)")])]),t._v(" "),s("tr",[s("td",[t._v("* / % //")]),t._v(" "),s("td",[t._v("乘、除、取余数、取整除")])]),t._v(" "),s("tr",[s("td",[t._v("+ -")]),t._v(" "),s("td",[t._v("加法、减法")])]),t._v(" "),s("tr",[s("td",[t._v("<= < > >=")]),t._v(" "),s("td",[t._v("比较运算符")])]),t._v(" "),s("tr",[s("td",[t._v("== !=")]),t._v(" "),s("td",[t._v("等于运算符")])]),t._v(" "),s("tr",[s("td",[t._v("= %= /= //= -= += *= **=")]),t._v(" "),s("td",[t._v("赋值运算符")])]),t._v(" "),s("tr",[s("td",[t._v("not or and")]),t._v(" "),s("td",[t._v("逻辑运算符")])])])]),t._v(" "),s("h2",{attrs:{id:"变量的基本使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量的基本使用"}},[t._v("#")]),t._v(" 变量的基本使用")]),t._v(" "),s("p",[t._v("在python中，定义变量时是不需要指定变量的类型，在运行时，python解释器会根据赋值语句等号右侧的的数据自动推导出变量中保存数据的准确类型。")]),t._v(" "),s("h3",{attrs:{id:"不同类型变量之间的计算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不同类型变量之间的计算"}},[t._v("#")]),t._v(" 不同类型变量之间的计算")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("数字型变量")]),t._v(" 之间可以直接计算")])]),t._v(" "),s("ul",[s("li",[t._v("在 Python 中，两个数字型变量是可以直接进行算数运算的")]),t._v(" "),s("li",[t._v("如果变量是 "),s("code",[t._v("bool")]),t._v(" 型，在计算时\n"),s("ul",[s("li",[s("code",[t._v("True")]),t._v(" 对应的数字是 "),s("code",[t._v("1")])]),t._v(" "),s("li",[s("code",[t._v("False")]),t._v(" 对应的数字是 "),s("code",[t._v("0")])])])])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("strong",[t._v("字符串变量")]),t._v(" 之间使用 "),s("code",[t._v("+")]),t._v(" 拼接字符串")])]),t._v(" "),s("ul",[s("li",[t._v("在 Python 中，字符串之间可以使用 "),s("code",[t._v("+")]),t._v(" 拼接生成新的字符串")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("In "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" first_name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"三"')]),t._v("\nIn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" last_name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张"')]),t._v("\nIn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" first_name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" last_name\nOut"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'三张'")]),t._v("\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[s("strong",[t._v("字符串变量")]),t._v(" 可以和 "),s("strong",[t._v("整数")]),t._v(" 使用 "),s("code",[t._v("*")]),t._v(" 重复拼接相同的字符串,但不能进行其他的计算")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("In "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("\nOut"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'--------------------------------------------------'")]),t._v("\n")])])]),s("h3",{attrs:{id:"变量的输入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量的输入"}},[t._v("#")]),t._v(" 变量的输入")]),t._v(" "),s("p",[t._v("使用"),s("code",[t._v("input")]),t._v("函数即可从键盘获得输入。"),s("br"),t._v("\n例子：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("input")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入姓名："')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"变量的格式化输出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量的格式化输出"}},[t._v("#")]),t._v(" 变量的格式化输出")]),t._v(" "),s("p",[t._v("如果希望输出文字信息的同时，一起输出数据，就需要使用到格式化操作符。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("%")]),t._v(" 被称为 "),s("strong",[t._v("格式化操作符")]),t._v("，专门用于处理字符串中的格式。")]),t._v(" "),s("li",[t._v("包含 "),s("code",[t._v("%")]),t._v(" 的字符串，被称为 "),s("strong",[t._v("格式化字符串")])]),t._v(" "),s("li",[s("code",[t._v("%")]),t._v(" 和不同的 "),s("strong",[t._v("字符")]),t._v(" 连用，"),s("strong",[t._v("不同类型的数据")]),t._v(" 需要使用 "),s("strong",[t._v("不同的格式化字符")])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("格式化字符")]),t._v(" "),s("th",[t._v("含义")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("%s")]),t._v(" "),s("td",[t._v("字符串")])]),t._v(" "),s("tr",[s("td",[t._v("%d")]),t._v(" "),s("td",[t._v("有符号十进制整数，"),s("code",[t._v("%06d")]),t._v(" 表示输出的整数显示位数，不足的地方使用 "),s("code",[t._v("0")]),t._v(" 补全")])]),t._v(" "),s("tr",[s("td",[t._v("%f")]),t._v(" "),s("td",[t._v("浮点数，"),s("code",[t._v("%.2f")]),t._v(" 表示小数点后只显示两位")])]),t._v(" "),s("tr",[s("td",[t._v("%%")]),t._v(" "),s("td",[t._v("输出 "),s("code",[t._v("%")])])])])]),t._v(" "),s("p",[t._v("语法格式如下：")]),t._v(" "),s("ul",[s("li",[t._v('print("格式化字符串" % 变量1)')]),t._v(" "),s("li",[t._v('print("格式化字符串" % (变量1, 变量2...))')])]),t._v(" "),s("h2",{attrs:{id:"变量的命名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量的命名"}},[t._v("#")]),t._v(" 变量的命名")]),t._v(" "),s("h3",{attrs:{id:"标识符和关键字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标识符和关键字"}},[t._v("#")]),t._v(" 标识符和关键字")]),t._v(" "),s("p",[t._v("标识符就是程序员定义的 "),s("strong",[t._v("变量名")]),t._v("、"),s("strong",[t._v("函数名")])]),t._v(" "),s("ul",[s("li",[t._v("标识符可以由 "),s("strong",[t._v("字母")]),t._v("、"),s("strong",[t._v("下划线")]),t._v(" 和 "),s("strong",[t._v("数字")]),t._v(" 组成")]),t._v(" "),s("li",[t._v("不能以数字开头")]),t._v(" "),s("li",[t._v("不能与关键字重名")])]),t._v(" "),s("p",[t._v("关键字就是在 "),s("code",[t._v("Python")]),t._v(" 内部已经使用的标识符")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("关键字")]),t._v(" 具有特殊的功能和含义")]),t._v(" "),s("li",[t._v("开发者 "),s("strong",[t._v("不允许定义和关键字相同的名字的标示符")])])]),t._v(" "),s("p",[t._v("通过以下命令可以查看 "),s("code",[t._v("Python")]),t._v(" 中的关键字")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("In "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" keyword\nIn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("keyword"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("kwlist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"变量的命名规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量的命名规则"}},[t._v("#")]),t._v(" 变量的命名规则")]),t._v(" "),s("p",[t._v("注意 "),s("code",[t._v("Python")]),t._v(" 中的标识符是区分大小写的。")]),t._v(" "),s("ul",[s("li",[t._v("在定义变量时，为了保证代码格式，"),s("code",[t._v("=")]),t._v(" 的左右应该各保留一个空格")]),t._v(" "),s("li",[t._v("在 "),s("code",[t._v("Python")]),t._v(" 中，如果 "),s("strong",[t._v("变量名")]),t._v(" 需要由 "),s("strong",[t._v("二个")]),t._v(" 或 "),s("strong",[t._v("多个单词")]),t._v(" 组成时，可以按照以下方式命名\n"),s("ol",[s("li",[t._v("每个单词都使用小写字母")]),t._v(" "),s("li",[t._v("单词与单词之间使用 "),s("strong",[s("code",[t._v("_")]),t._v("下划线")]),t._v(" 连接")])])])]),t._v(" "),s("p",[t._v("驼峰命名法")]),t._v(" "),s("ul",[s("li",[t._v("当 "),s("strong",[t._v("变量名")]),t._v(" 是由二个或多个单词组成时，还可以利用驼峰命名法来命名")]),t._v(" "),s("li",[s("strong",[t._v("小驼峰式命名法")]),t._v(" "),s("ul",[s("li",[t._v("第一个单词以小写字母开始，后续单词的首字母大写")]),t._v(" "),s("li",[t._v("例如："),s("code",[t._v("firstName")]),t._v("、"),s("code",[t._v("lastName")])])])]),t._v(" "),s("li",[s("strong",[t._v("大驼峰式命名法")]),t._v(" "),s("ul",[s("li",[t._v("每一个单词的首字母都采用大写字母")]),t._v(" "),s("li",[t._v("例如："),s("code",[t._v("FirstName")]),t._v("、"),s("code",[t._v("LastName")]),t._v("、"),s("code",[t._v("CamelCase")])])])])]),t._v(" "),s("h2",{attrs:{id:"判断-if-语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#判断-if-语句"}},[t._v("#")]),t._v(" 判断(if)语句")]),t._v(" "),s("h3",{attrs:{id:"if语句体验"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#if语句体验"}},[t._v("#")]),t._v(" if语句体验")]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("Python")]),t._v(" 中，"),s("strong",[t._v("if 语句")]),t._v(" 就是用来进行判断的，格式如下：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" 条件"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    条件"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("满足执行的代码\n    ……\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" 条件"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    条件"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("满足时，执行的代码\n    ……\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" 条件"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    条件"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("满足时，执行的代码\n    ……\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    以上条件都不满足时，执行的代码\n    ……\n")])])]),s("p",[s("strong",[t._v("注意")])]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("代码的缩进为一个 "),s("code",[t._v("tab")]),t._v(" 键，或者 "),s("strong",[t._v("4")]),t._v(" 个空格 —— "),s("strong",[t._v("建议使用空格")])]),t._v(" "),s("li",[t._v("在 Python 开发中，Tab 和空格不要混用！")]),t._v(" "),s("li",[s("code",[t._v("if")]),t._v("、"),s("code",[t._v("elif")]),t._v(" 和 "),s("code",[t._v("else")]),t._v(" 语句以及各自的缩进部分共同是一个 **完整的代码块")])])]),t._v(" "),s("h3",{attrs:{id:"逻辑运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算"}},[t._v("#")]),t._v(" 逻辑运算")]),t._v(" "),s("ul",[s("li",[t._v("在程序开发中，通常 "),s("strong",[t._v("在判断条件时")]),t._v("，会需要同时判断多个条件")]),t._v(" "),s("li",[t._v("只有多个条件都满足，才能够执行后续代码，这个时候需要使用到 "),s("strong",[t._v("逻辑运算符")])]),t._v(" "),s("li",[s("strong",[t._v("逻辑运算符")]),t._v(" 可以把 "),s("strong",[t._v("多个条件")]),t._v(" 按照 "),s("strong",[t._v("逻辑")]),t._v(" 进行 "),s("strong",[t._v("连接")]),t._v("，变成 "),s("strong",[t._v("更复杂的条件")])]),t._v(" "),s("li",[t._v("Python 中的 "),s("strong",[t._v("逻辑运算符")]),t._v(" 包括："),s("strong",[t._v("与 and")]),t._v("／"),s("strong",[t._v("或 or")]),t._v("／"),s("strong",[t._v("非 not")]),t._v(" 三种")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("条件"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" 条件"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n条件"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" 条件"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" 条件\n")])])]),s("h2",{attrs:{id:"循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环"}},[t._v("#")]),t._v(" 循环")]),t._v(" "),s("h3",{attrs:{id:"while循环基本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#while循环基本"}},[t._v("#")]),t._v(" while循环基本")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" 条件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("判断 计数器 是否达到 目标次数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    条件满足时，做的事情"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    条件满足时，做的事情"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n    条件满足时，做的事情"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("省略"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    \n    处理条件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("计数器 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("strong",[t._v("注意")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("while")]),t._v(" 语句以及缩进部分是一个 "),s("strong",[t._v("完整的代码块")]),t._v("。")]),t._v(" "),s("li",[t._v("循环结束后，之前定义的计数器条件的数值是依旧存在的。")]),t._v(" "),s("li",[t._v("由于程序员的原因，忘记在循环内部修改循环的判断条件，导致循环持续执行，程序无法终止。")])]),t._v(" "),s("h3",{attrs:{id:"break-和-continue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#break-和-continue"}},[t._v("#")]),t._v(" break 和 continue")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("break")]),t._v(" 和 "),s("code",[t._v("continue")]),t._v(" 是专门在循环中使用的关键字。")]),t._v(" "),s("li",[s("code",[t._v("break")]),t._v(" "),s("strong",[t._v("某一条件满足时")]),t._v("，退出循环，不再执行后续重复的代码。")]),t._v(" "),s("li",[s("code",[t._v("continue")]),t._v(" "),s("strong",[t._v("某一条件满足时")]),t._v("，不需要执行循环代码，而其他条件都需要执行。")])]),t._v(" "),s("h2",{attrs:{id:"字符串中的转义字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串中的转义字符"}},[t._v("#")]),t._v(" 字符串中的转义字符")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("制表符")]),t._v(" 的功能是在不使用表格的情况下在 "),s("strong",[t._v("垂直方向")]),t._v(" 按列对齐文本")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("转义字符")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("\\\\")]),t._v(" "),s("td",[t._v("反斜杠符号")])]),t._v(" "),s("tr",[s("td",[t._v("\\'")]),t._v(" "),s("td",[t._v("单引号")])]),t._v(" "),s("tr",[s("td",[t._v('\\"')]),t._v(" "),s("td",[t._v("双引号")])]),t._v(" "),s("tr",[s("td",[t._v("\\n")]),t._v(" "),s("td",[t._v("换行")])]),t._v(" "),s("tr",[s("td",[t._v("\\t")]),t._v(" "),s("td",[t._v("横向制表符")])]),t._v(" "),s("tr",[s("td",[t._v("\\r")]),t._v(" "),s("td",[t._v("回车")])])])]),t._v(" "),s("h2",{attrs:{id:"函数基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数基础"}},[t._v("#")]),t._v(" 函数基础")]),t._v(" "),s("h3",{attrs:{id:"函数的定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数的定义"}},[t._v("#")]),t._v(" 函数的定义")]),t._v(" "),s("p",[t._v("定义函数的格式如下：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" 函数名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    函数封装的代码\n    ……\n")])])]),s("p",[s("strong",[t._v("注意")])]),t._v(" "),s("blockquote",[s("p",[t._v("不能将函数调用放在函数定义的上方。"),s("br"),t._v("\n因为 "),s("strong",[t._v("函数体相对比较独立")]),t._v("，"),s("strong",[t._v("函数定义的上方")]),t._v("，应该和其他代码（包括注释）保留 "),s("strong",[t._v("两个空行")])])]),t._v(" "),s("h3",{attrs:{id:"函数参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数参数"}},[t._v("#")]),t._v(" 函数参数")]),t._v(" "),s("ul",[s("li",[t._v("在函数名后面的小括号内部填写 "),s("strong",[t._v("参数")])]),t._v(" "),s("li",[t._v("多个参数之间使用 "),s("code",[t._v(",")]),t._v(" 分隔")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum_2_num")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" num2\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d + %d = %d"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nsum_2_num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"函数的返回值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数的返回值"}},[t._v("#")]),t._v(" 函数的返回值")]),t._v(" "),s("ul",[s("li",[t._v("在函数中使用 "),s("code",[t._v("return")]),t._v(" 关键字可以返回结果")]),t._v(" "),s("li",[t._v("调用函数一方，可以 "),s("strong",[t._v("使用变量")]),t._v(" 来 "),s("strong",[t._v("接收")]),t._v(" 函数的返回结果")])]),t._v(" "),s("blockquote",[s("p",[t._v("注意："),s("code",[t._v("return")]),t._v(" 表示返回，后续的代码都不会被执行")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum_2_num")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" num1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" num2\n\nresult "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sum_2_num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"计算结果是 %d"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"使用模块中的函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用模块中的函数"}},[t._v("#")]),t._v(" 使用模块中的函数")]),t._v(" "),s("p",[s("strong",[t._v("模块是 Python 程序架构的一个核心概念")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("模块")]),t._v(" 就好比是 "),s("strong",[t._v("工具包")]),t._v("，要想使用这个工具包中的工具，就需要 "),s("strong",[t._v("导入 import")]),t._v(" 这个模块")]),t._v(" "),s("li",[t._v("每一个以扩展名 "),s("code",[t._v("py")]),t._v(" 结尾的 "),s("code",[t._v("Python")]),t._v(" 源代码文件都是一个 "),s("strong",[t._v("模块")])]),t._v(" "),s("li",[t._v("在模块中定义的 "),s("strong",[t._v("全局变量")]),t._v(" 、 "),s("strong",[t._v("函数")]),t._v(" 都是模块能够提供给外界直接使用的工具")])]),t._v(" "),s("p",[s("strong",[t._v("使用方法")])]),t._v(" "),s("ul",[s("li",[t._v("可以 "),s("strong",[t._v("在一个 Python 文件")]),t._v(" 中 "),s("strong",[t._v("定义 变量 或者 函数")])]),t._v(" "),s("li",[t._v("然后在 "),s("strong",[t._v("另外一个文件中")]),t._v(" 使用 "),s("code",[t._v("import")]),t._v(" 导入这个模块")]),t._v(" "),s("li",[t._v("导入之后，就可以使用 "),s("code",[t._v("模块名.变量")]),t._v(" / "),s("code",[t._v("模块名.函数")]),t._v(" 的方式，使用这个模块中定义的变量或者函数")])]),t._v(" "),s("blockquote",[s("p",[t._v("注意："),s("strong",[t._v("模块名也是一个标识符")]),t._v("，如果在给 Python 文件起名时，"),s("strong",[t._v("以数字开头")]),t._v(" 是无法在 "),s("code",[t._v("PyCharm")]),t._v(" 中通过导入这个模块的")])]),t._v(" "),s("h3",{attrs:{id:"pyc文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pyc文件"}},[t._v("#")]),t._v(" Pyc文件")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("C")]),t._v(" 是 "),s("code",[t._v("compiled")]),t._v(" "),s("strong",[t._v("编译过")]),t._v(" 的意思")])]),t._v(" "),s("p",[s("strong",[t._v("操作步骤")])]),t._v(" "),s("ol",[s("li",[t._v("浏览程序目录会发现一个 "),s("code",[t._v("__pycache__")]),t._v(" 的目录")]),t._v(" "),s("li",[t._v("目录下会有一个 "),s("code",[t._v("hm_10_分隔线模块.cpython-35.pyc")]),t._v(" 文件，"),s("code",[t._v("cpython-35")]),t._v(" 表示 "),s("code",[t._v("Python")]),t._v(" 解释器的版本")]),t._v(" "),s("li",[t._v("这个 "),s("code",[t._v("pyc")]),t._v(" 文件是由 Python 解释器将 "),s("strong",[t._v("模块的源码")]),t._v(" 转换为 "),s("strong",[t._v("字节码")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Python")]),t._v(" 这样保存 "),s("strong",[t._v("字节码")]),t._v(" 是作为一种启动 "),s("strong",[t._v("速度的优化")])])])])]),t._v(" "),s("p",[s("strong",[t._v("字节码")])]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("Python")]),t._v(" 在解释源程序时是分成两个步骤的")]),t._v(" "),s("ol",[s("li",[t._v("首先处理源代码，"),s("strong",[t._v("编译")]),t._v(" 生成一个二进制 "),s("strong",[t._v("字节码")])]),t._v(" "),s("li",[t._v("再对 "),s("strong",[t._v("字节码")]),t._v(" 进行处理，才会生成 CPU 能够识别的 "),s("strong",[t._v("机器码")])])])]),t._v(" "),s("li",[s("p",[t._v("有了模块的字节码文件之后，下一次运行程序时，如果在 "),s("strong",[t._v("上次保存字节码之后")]),t._v(" 没有修改过源代码，Python 将会加载 .pyc 文件并跳过编译这个步骤")])]),t._v(" "),s("li",[s("p",[t._v("当 "),s("code",[t._v("Python")]),t._v(" 重编译时，它会自动检查源文件和字节码文件的时间戳")])]),t._v(" "),s("li",[s("p",[t._v("如果你又修改了源代码，下次程序运行时，字节码将自动重新创建")])])]),t._v(" "),s("h3",{attrs:{id:"关键字、函数和方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关键字、函数和方法"}},[t._v("#")]),t._v(" 关键字、函数和方法")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("关键字")]),t._v(" 是 Python 内置的、具有特殊意义的标识符。")]),t._v(" "),s("li",[s("strong",[t._v("函数")]),t._v(" 封装了独立功能，可以直接调用。")]),t._v(" "),s("li",[s("strong",[t._v("方法")]),t._v(" 和函数类似，同样是封装了独立的功能，但"),s("strong",[t._v("方法")]),t._v(" 需要通过 "),s("strong",[t._v("对象")]),t._v(" 来调用，表示针对这个 "),s("strong",[t._v("对象")]),t._v(" 要做的操作。")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("对象"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("方法名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("参数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[t._v("在变量后面输入 "),s("code",[t._v(".")]),t._v("，然后选择针对这个变量要执行的操作，记忆起来比函数要简单很多。")])]),t._v(" "),s("h2",{attrs:{id:"高级变量类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#高级变量类型"}},[t._v("#")]),t._v(" 高级变量类型")]),t._v(" "),s("ul",[s("li",[t._v("在 "),s("code",[t._v("Python")]),t._v(" 中，所有 "),s("strong",[t._v("非数字型变量")]),t._v(" 都支持以下特点：\n"),s("ol",[s("li",[t._v("都是一个 "),s("strong",[t._v("序列")]),t._v(" "),s("code",[t._v("sequence")]),t._v("，也可以理解为 "),s("strong",[t._v("容器")])]),t._v(" "),s("li",[s("strong",[t._v("取值")]),t._v(" "),s("code",[t._v("[]")])]),t._v(" "),s("li",[s("strong",[t._v("遍历")]),t._v(" "),s("code",[t._v("for in")])]),t._v(" "),s("li",[s("strong",[t._v("计算长度")]),t._v("、"),s("strong",[t._v("最大/最小值")]),t._v("、"),s("strong",[t._v("比较")]),t._v("、"),s("strong",[t._v("删除")])]),t._v(" "),s("li",[s("strong",[t._v("链接")]),t._v(" "),s("code",[t._v("+")]),t._v(" 和 "),s("strong",[t._v("重复")]),t._v(" "),s("code",[t._v("*")])]),t._v(" "),s("li",[s("strong",[t._v("切片")])])])])]),t._v(" "),s("h3",{attrs:{id:"列表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#列表"}},[t._v("#")]),t._v(" 列表")]),t._v(" "),s("h4",{attrs:{id:"列表的定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#列表的定义"}},[t._v("#")]),t._v(" 列表的定义")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("List")]),t._v("（列表） 是 "),s("code",[t._v("Python")]),t._v(" 中使用 "),s("strong",[t._v("最频繁")]),t._v(" 的数据类型，在其他语言中通常叫做 "),s("strong",[t._v("数组")])]),t._v(" "),s("li",[t._v("专门用于存储 "),s("strong",[t._v("一串 信息")])]),t._v(" "),s("li",[t._v("列表用 "),s("code",[t._v("[]")]),t._v(" 定义，"),s("strong",[t._v("数据")]),t._v(" 之间使用 "),s("code",[t._v(",")]),t._v(" 分隔")]),t._v(" "),s("li",[t._v("列表的 "),s("strong",[t._v("索引")]),t._v(" 从 "),s("code",[t._v("0")]),t._v(" 开始\n"),s("ul",[s("li",[s("strong",[t._v("索引")]),t._v(" 就是数据在 "),s("strong",[t._v("列表")]),t._v(" 中的位置编号，"),s("strong",[t._v("索引")]),t._v(" 又可以被称为 "),s("strong",[t._v("下标")])])])])]),t._v(" "),s("blockquote",[s("p",[t._v("注意：从列表中取值时，如果 "),s("strong",[t._v("超出索引范围")]),t._v("，程序会报错")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("name_list "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zhangsan"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lisi"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wangwu"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h4",{attrs:{id:"列表常用操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#列表常用操作"}},[t._v("#")]),t._v(" 列表常用操作")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("序号")]),t._v(" "),s("th",[t._v("分类")]),t._v(" "),s("th",[t._v("关键字 / 函数 / 方法")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("1")]),t._v(" "),s("td",[t._v("增加")]),t._v(" "),s("td",[t._v("列表.insert(索引, 数据)")]),t._v(" "),s("td",[t._v("在指定位置插入数据")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td"),t._v(" "),s("td",[t._v("列表.append(数据)")]),t._v(" "),s("td",[t._v("在末尾追加数据")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td"),t._v(" "),s("td",[t._v("列表.extend(列表2)")]),t._v(" "),s("td",[t._v("将列表2 的数据追加到列表")])]),t._v(" "),s("tr",[s("td",[t._v("2")]),t._v(" "),s("td",[t._v("修改")]),t._v(" "),s("td",[t._v("列表[索引] = 数据")]),t._v(" "),s("td",[t._v("修改指定索引的数据")])]),t._v(" "),s("tr",[s("td",[t._v("3")]),t._v(" "),s("td",[t._v("删除")]),t._v(" "),s("td",[t._v("del 列表[索引]")]),t._v(" "),s("td",[t._v("删除指定索引的数据")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td"),t._v(" "),s("td",[t._v("列表.remove[数据]")]),t._v(" "),s("td",[t._v("删除第一个出现的指定数据")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td"),t._v(" "),s("td",[t._v("列表.pop")]),t._v(" "),s("td",[t._v("删除末尾数据")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td"),t._v(" "),s("td",[t._v("列表.pop(索引)")]),t._v(" "),s("td",[t._v("删除指定索引数据")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td"),t._v(" "),s("td",[t._v("列表.clear")]),t._v(" "),s("td",[t._v("清空列表")])]),t._v(" "),s("tr",[s("td",[t._v("4")]),t._v(" "),s("td",[t._v("统计")]),t._v(" "),s("td",[t._v("len(列表)")]),t._v(" "),s("td",[t._v("列表长度")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td"),t._v(" "),s("td",[t._v("列表.count(数据)")]),t._v(" "),s("td",[t._v("数据在列表中出现的次数")])]),t._v(" "),s("tr",[s("td",[t._v("5")]),t._v(" "),s("td",[t._v("排序")]),t._v(" "),s("td",[t._v("列表.sort()")]),t._v(" "),s("td",[t._v("升序排序")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td"),t._v(" "),s("td",[t._v("列表.sort(reverse=True)")]),t._v(" "),s("td",[t._v("降序排序")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td"),t._v(" "),s("td",[t._v("列表.reverse()")]),t._v(" "),s("td",[t._v("逆序、反转")])])])]),t._v(" "),s("p",[s("strong",[t._v("del 关键字")])]),t._v(" "),s("ul",[s("li",[t._v("使用 del 关键字(delete) 同样可以删除列表中元素。")]),t._v(" "),s("li",[t._v("del 关键字本质上是用来 将一个变量从内存中删除的。")]),t._v(" "),s("li",[t._v("如果使用 del 关键字将变量从内存中删除，后续的代码就不能再使用这个变量了。")])]),t._v(" "),s("h4",{attrs:{id:"循环遍历"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环遍历"}},[t._v("#")]),t._v(" 循环遍历")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("遍历")]),t._v(" 就是 "),s("strong",[t._v("从头到尾")]),t._v(" "),s("strong",[t._v("依次")]),t._v(" 从 "),s("strong",[t._v("列表")]),t._v(" 中获取数据\n"),s("ul",[s("li",[t._v("在 "),s("strong",[t._v("循环体内部")]),t._v(" 针对 "),s("strong",[t._v("每一个元素")]),t._v("，执行相同的操作")])])]),t._v(" "),s("li",[t._v("在 "),s("code",[t._v("Python")]),t._v(" 中为了提高列表的遍历效率，专门提供的 "),s("strong",[t._v("迭代 iteration 遍历")])]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("for")]),t._v(" 就能够实现迭代遍历")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for [循环内部使用的变量] in [列表]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" name_list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    循环内部针对列表元素进行操作\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{attrs:{align:"center"}},[s("img",{attrs:{src:a(298),width:"80%"}})]),t._v(" "),s("p",[t._v("尽管 "),s("code",[t._v("Python")]),t._v(" 的"),s("strong",[t._v("列表")]),t._v("中可以"),s("strong",[t._v("存储不同类型的数据")]),t._v("\n但是在开发中，更多的应用场景是")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("列表")]),t._v("存储相同类型的数据；")]),t._v(" "),s("li",[t._v("通过"),s("strong",[t._v("迭代遍历")]),t._v("，在循环体内部，针对列表中的每一项元素，执行相同的操作。")])]),t._v(" "),s("h3",{attrs:{id:"元组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元组"}},[t._v("#")]),t._v(" 元组")]),t._v(" "),s("h4",{attrs:{id:"元组的定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元组的定义"}},[t._v("#")]),t._v(" 元组的定义")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Tuple")]),t._v("（元组）与列表类似，不同之处在于元组的 "),s("strong",[t._v("元素不能修改")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("元组")]),t._v(" 表示多个元素组成的序列")]),t._v(" "),s("li",[s("strong",[t._v("元组")]),t._v(" 在 "),s("code",[t._v("Python")]),t._v(" 开发中，有特定的应用场景")])])]),t._v(" "),s("li",[t._v("用于存储 "),s("strong",[t._v("一串信息")]),t._v("，"),s("strong",[t._v("数据")]),t._v("之间使用 "),s("code",[t._v(",")]),t._v(" 分隔")]),t._v(" "),s("li",[t._v("元组用 "),s("code",[t._v("()")]),t._v(" 定义")]),t._v(" "),s("li",[t._v("元组的 "),s("strong",[t._v("索引")]),t._v(" 从 "),s("code",[t._v("0")]),t._v(" 开始")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("info_tuple "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zhangsan"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.75")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建空元组")]),t._v("\ninfo_tuple "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 元组中只包含一个元素时，需要在元素后面加逗号")]),t._v("\ninfo_tuple "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{attrs:{align:"center"}},[s("img",{attrs:{src:a(299),width:"80%"}})]),t._v(" "),s("h4",{attrs:{id:"循环遍历-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环遍历-2"}},[t._v("#")]),t._v(" 循环遍历")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for [循环内部使用的变量] in [元组]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    循环内部针对元组元素进行操作\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[t._v("在 "),s("code",[t._v("Python")]),t._v(" 中，可以使用 "),s("code",[t._v("for")]),t._v(" 循环遍历所有非数字型类型的变量："),s("strong",[t._v("列表")]),t._v("、"),s("strong",[t._v("元组")]),t._v("、"),s("strong",[t._v("字典")]),t._v(" 以及 "),s("strong",[t._v("字符串")])]),t._v(" "),s("li",[s("strong",[t._v("提示")]),t._v("：在实际开发中，除非 "),s("strong",[t._v("能够确认元组中的数据类型")]),t._v("，否则针对元组的循环遍历需求并不是很多")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("info "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zhangsan"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%s 的年龄是 %d"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"元组和列表之间的转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元组和列表之间的转换"}},[t._v("#")]),t._v(" 元组和列表之间的转换")]),t._v(" "),s("ul",[s("li",[t._v("使用 "),s("code",[t._v("list")]),t._v(" 函数可以把元组转换成列表")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("元组"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),s("ul",[s("li",[t._v("使用 "),s("code",[t._v("tuple")]),t._v(" 函数可以把列表转换成元组")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("tuple")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("列表"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"字典"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字典"}},[t._v("#")]),t._v(" 字典")]),t._v(" "),s("h4",{attrs:{id:"字典的定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字典的定义"}},[t._v("#")]),t._v(" 字典的定义")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("dictionary")]),t._v("（字典） 是 "),s("strong",[t._v("除列表以外")]),t._v(" "),s("code",[t._v("Python")]),t._v(" 之中 "),s("strong",[t._v("最灵活")]),t._v(" 的数据类型")]),t._v(" "),s("li",[t._v("字典同样可以用来 "),s("strong",[t._v("存储多个数据")]),t._v(" "),s("ul",[s("li",[t._v("通常用于存储 "),s("strong",[t._v("描述一个 "),s("code",[t._v("物体")]),t._v(" 的相关信息")])])])]),t._v(" "),s("li",[t._v("和列表的区别\n"),s("ul",[s("li",[s("strong",[t._v("列表")]),t._v(" 是 "),s("strong",[t._v("有序")]),t._v(" 的对象集合")]),t._v(" "),s("li",[s("strong",[t._v("字典")]),t._v(" 是 "),s("strong",[t._v("无序")]),t._v(" 的对象集合")])])]),t._v(" "),s("li",[t._v("字典用 "),s("code",[t._v("{}")]),t._v(" 定义")]),t._v(" "),s("li",[t._v("字典使用 "),s("strong",[t._v("键值对")]),t._v(" 存储数据，键值对之间使用 "),s("code",[t._v(",")]),t._v(" 分隔\n"),s("ul",[s("li",[s("strong",[t._v("键")]),t._v(" "),s("code",[t._v("key")]),t._v(" 是索引")]),t._v(" "),s("li",[s("strong",[t._v("值")]),t._v(" "),s("code",[t._v("value")]),t._v(" 是数据")]),t._v(" "),s("li",[s("strong",[t._v("键")]),t._v(" 和 "),s("strong",[t._v("值")]),t._v(" 之间使用 "),s("code",[t._v(":")]),t._v(" 分隔")]),t._v(" "),s("li",[s("strong",[t._v("键必须是唯一的")])]),t._v(" "),s("li",[s("strong",[t._v("值")]),t._v(" 可以取任何数据类型，但 "),s("strong",[t._v("键")]),t._v(" 只能使用 "),s("strong",[t._v("字符串")]),t._v("、"),s("strong",[t._v("数字")]),t._v("或 "),s("strong",[t._v("元组")])])])])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("xiaoming "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"小明"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"age"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gender"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"height"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.75")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{attrs:{align:"center"}},[s("img",{attrs:{src:a(300),width:"90%"}})]),t._v(" "),s("h4",{attrs:{id:"循环遍历-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环遍历-3"}},[t._v("#")]),t._v(" 循环遍历")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("遍历")]),t._v(" 就是 "),s("strong",[t._v("依次")]),t._v(" 从 "),s("strong",[t._v("字典")]),t._v(" 中获取所有键值对")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for 循环内部使用的 `key 的变量` in 字典")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" k "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" xiaoming"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%s: %s"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" xiaoming"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("strong",[t._v("提示")])]),t._v(" "),s("ul",[s("li",[t._v("在实际开发中，由于字典中每一个键值对保存数据的类型是不同的，所以针对字典的循环遍历需求并不是很多")])]),t._v(" "),s("h4",{attrs:{id:"应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[t._v("#")]),t._v(" "),s("strong",[t._v("应用场景")])]),t._v(" "),s("ul",[s("li",[t._v("尽管可以使用 "),s("code",[t._v("for in")]),t._v(" 遍历 "),s("strong",[t._v("字典")])]),t._v(" "),s("li",[t._v("但是在开发中，更多的应用场景是：\n"),s("ul",[s("li",[t._v("使用 "),s("strong",[t._v("多个键值对")]),t._v("，存储 "),s("strong",[t._v("描述一个 "),s("code",[t._v("物体")]),t._v(" 的相关信息")]),t._v(" —— 描述更复杂的数据信息")]),t._v(" "),s("li",[t._v("将 "),s("strong",[t._v("多个字典")]),t._v(" 放在 "),s("strong",[t._v("一个列表")]),t._v(" 中，再进行遍历，在循环体内部针对每一个字典进行 "),s("strong",[t._v("相同的处理")])])])])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("card_list "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张三"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"qq"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"12345"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"phone"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"110"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"李四"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"qq"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"54321"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"phone"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10086"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),s("h4",{attrs:{id:"字符串的定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串的定义"}},[t._v("#")]),t._v(" 字符串的定义")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("字符串")]),t._v(" 就是 "),s("strong",[t._v("一串字符")]),t._v("，是编程语言中表示文本的数据类型")]),t._v(" "),s("li",[t._v("在 Python 中可以使用 "),s("strong",[t._v("一对双引号")]),t._v(" "),s("code",[t._v('"')]),t._v(" 或者 "),s("strong",[t._v("一对单引号")]),t._v(" "),s("code",[t._v("'")]),t._v(" 定义一个字符串。\n"),s("ul",[s("li",[t._v("如果字符串内部需要使用 "),s("code",[t._v('"')]),t._v("，可以使用 "),s("code",[t._v("'")]),t._v(" 定义字符串")]),t._v(" "),s("li",[t._v("如果字符串内部需要使用 "),s("code",[t._v("'")]),t._v("，可以使用 "),s("code",[t._v('"')]),t._v(" 定义字符串")])])]),t._v(" "),s("li",[t._v("可以使用 "),s("strong",[t._v("索引")]),t._v(" 获取一个字符串中 "),s("strong",[t._v("指定位置的字符")]),t._v("，索引计数从 "),s("strong",[t._v("0")]),t._v(" 开始")]),t._v(" "),s("li",[t._v("也可以使用 "),s("code",[t._v("for")]),t._v(" "),s("strong",[t._v("循环遍历")]),t._v(" 字符串中每一个字符")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("string "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello Python"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"字符串的常用操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串的常用操作"}},[t._v("#")]),t._v(" 字符串的常用操作")]),t._v(" "),s("ol",[s("li",[t._v("判断类型 - 9种")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("string.isspace()")]),t._v(" "),s("td",[t._v("如果 string 中只包含空格，则返回 True")])]),t._v(" "),s("tr",[s("td",[t._v("string.isalnum()")]),t._v(" "),s("td",[t._v("如果 string 至少有一个字符并且所有字符都是字母或数字则返回 True")])]),t._v(" "),s("tr",[s("td",[t._v("string.isalpha()")]),t._v(" "),s("td",[t._v("如果 string 至少有一个字符并且所有字符都是字母则返回 True")])]),t._v(" "),s("tr",[s("td",[t._v("string.isdecimal()")]),t._v(" "),s("td",[t._v("如果 string 只包含数字则返回 True，"),s("code",[t._v("全角数字")])])]),t._v(" "),s("tr",[s("td",[t._v("string.isdigit()")]),t._v(" "),s("td",[t._v("如果 string 只包含数字则返回 True，"),s("code",[t._v("全角数字")]),t._v("、"),s("code",[t._v("⑴")]),t._v("、"),s("code",[t._v("\\u00b2")])])]),t._v(" "),s("tr",[s("td",[t._v("string.isnumeric()")]),t._v(" "),s("td",[t._v("如果 string 只包含数字则返回 True，"),s("code",[t._v("全角数字")]),t._v("，"),s("code",[t._v("汉字数字")])])]),t._v(" "),s("tr",[s("td",[t._v("string.istitle()")]),t._v(" "),s("td",[t._v("如果 string 是标题化的(每个单词的首字母大写)则返回 True")])]),t._v(" "),s("tr",[s("td",[t._v("string.islower()")]),t._v(" "),s("td",[t._v("如果 string 中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是小写，则返回 True")])]),t._v(" "),s("tr",[s("td",[t._v("string.isupper()")]),t._v(" "),s("td",[t._v("如果 string 中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是大写，则返回 True")])])])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("查找和替换 - 7种")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("string.startswith(str)")]),t._v(" "),s("td",[t._v("检查字符串是否是以 str 开头，是则返回 True")])]),t._v(" "),s("tr",[s("td",[t._v("string.endswith(str)")]),t._v(" "),s("td",[t._v("检查字符串是否是以 str 结束，是则返回 True")])]),t._v(" "),s("tr",[s("td",[t._v("string.find(str, start=0, end=len(string))")]),t._v(" "),s("td",[t._v("检测 str 是否包含在 string 中，如果 start 和 end 指定范围，则检查是否包含在指定范围内，如果是返回开始的索引值，否则返回 "),s("code",[t._v("-1")])])]),t._v(" "),s("tr",[s("td",[t._v("string.rfind(str, start=0, end=len(string))")]),t._v(" "),s("td",[t._v("类似于 find()，不过是从右边开始查找")])]),t._v(" "),s("tr",[s("td",[t._v("string.index(str, start=0, end=len(string))")]),t._v(" "),s("td",[t._v("跟 find() 方法类似，不过如果 str 不在 string 会报错")])]),t._v(" "),s("tr",[s("td",[t._v("string.rindex(str, start=0, end=len(string))")]),t._v(" "),s("td",[t._v("类似于 index()，不过是从右边开始")])]),t._v(" "),s("tr",[s("td",[t._v("string.replace(old_str, new_str, num=string.count(old))")]),t._v(" "),s("td",[t._v("把 string 中的 old_str 替换成 new_str，如果 num 指定，则替换不超过 num 次")])])])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("大小写转换 - 5种")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("string.capitalize()")]),t._v(" "),s("td",[t._v("把字符串的第一个字符大写")])]),t._v(" "),s("tr",[s("td",[t._v("string.title()")]),t._v(" "),s("td",[t._v("把字符串的每个单词首字母大写")])]),t._v(" "),s("tr",[s("td",[t._v("string.lower()")]),t._v(" "),s("td",[t._v("转换 string 中所有大写字符为小写")])]),t._v(" "),s("tr",[s("td",[t._v("string.upper()")]),t._v(" "),s("td",[t._v("转换 string 中的小写字母为大写")])]),t._v(" "),s("tr",[s("td",[t._v("string.swapcase()")]),t._v(" "),s("td",[t._v("翻转 string 中的大小写")])])])]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("文本对齐 - 3种")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("string.ljust(width)")]),t._v(" "),s("td",[t._v("返回一个原字符串左对齐，并使用空格填充至长度 width 的新字符串")])]),t._v(" "),s("tr",[s("td",[t._v("string.rjust(width)")]),t._v(" "),s("td",[t._v("返回一个原字符串右对齐，并使用空格填充至长度 width 的新字符串")])]),t._v(" "),s("tr",[s("td",[t._v("string.center(width)")]),t._v(" "),s("td",[t._v("返回一个原字符串居中，并使用空格填充至长度 width 的新字符串")])])])]),t._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[t._v("去除空白字符 - 3种")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("string.lstrip()")]),t._v(" "),s("td",[t._v("截掉 string 左边（开始）的空白字符")])]),t._v(" "),s("tr",[s("td",[t._v("string.rstrip()")]),t._v(" "),s("td",[t._v("截掉 string 右边（末尾）的空白字符")])]),t._v(" "),s("tr",[s("td",[t._v("string.strip()")]),t._v(" "),s("td",[t._v("截掉 string 左右两边的空白字符")])])])]),t._v(" "),s("ol",{attrs:{start:"6"}},[s("li",[t._v("拆分和连接 - 5种")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("string.partition(str)")]),t._v(" "),s("td",[t._v("把字符串 string 分成一个 3 元素的元组 (str前面, str, str后面)")])]),t._v(" "),s("tr",[s("td",[t._v("string.rpartition(str)")]),t._v(" "),s("td",[t._v("类似于 partition() 方法，不过是从右边开始查找")])]),t._v(" "),s("tr",[s("td",[t._v('string.split(str="", num)')]),t._v(" "),s("td",[t._v("以 str 为分隔符拆分 string，如果 num 有指定值，则仅分隔 num + 1 个子字符串，str 默认包含 '\\r', '\\t', '\\n' 和空格")])]),t._v(" "),s("tr",[s("td",[t._v("string.splitlines()")]),t._v(" "),s("td",[t._v("按照行('\\r', '\\n', '\\r\\n')分隔，返回一个包含各行作为元素的列表")])]),t._v(" "),s("tr",[s("td",[t._v("string.join(seq)")]),t._v(" "),s("td",[t._v("以 string 作为分隔符，将 seq 中所有的元素（的字符串表示）合并为一个新的字符串")])])])]),t._v(" "),s("h4",{attrs:{id:"字符串的切片"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串的切片"}},[t._v("#")]),t._v(" 字符串的切片")]),t._v(" "),s("p",[s("strong",[t._v("切片")]),t._v(" 方法适用于 "),s("strong",[t._v("字符串")]),t._v("、"),s("strong",[t._v("列表")]),t._v("、"),s("strong",[t._v("元组")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("切片")]),t._v(" 使用 "),s("strong",[t._v("索引值")]),t._v(" 来限定范围，从一个大的 "),s("strong",[t._v("字符串")]),t._v(" 中 "),s("strong",[t._v("切出")]),t._v(" 小的 "),s("strong",[t._v("字符串")])]),t._v(" "),s("li",[s("strong",[t._v("列表")]),t._v(" 和 "),s("strong",[t._v("元组")]),t._v(" 都是 "),s("strong",[t._v("有序")]),t._v(" 的集合，都能够 "),s("strong",[t._v("通过索引值")]),t._v(" 获取到对应的数据")]),t._v(" "),s("li",[s("strong",[t._v("字典")]),t._v(" 是一个 "),s("strong",[t._v("无序")]),t._v(" 的集合，是使用 "),s("strong",[t._v("键值对")]),t._v(" 保存数据")])]),t._v(" "),s("div",{attrs:{align:"center"}},[s("img",{attrs:{src:a(301),width:"80%"}})]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("字符串"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("开始索引"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("结束索引"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("步长"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[s("strong",[t._v("注意")]),t._v("：")]),t._v(" "),s("ol",[s("li",[t._v("指定的区间属于 "),s("strong",[t._v("左闭右开")]),t._v(" 型,从 "),s("code",[t._v("起始")]),t._v(" 位开始，到 "),s("strong",[s("code",[t._v("结束")]),t._v("位的前一位")]),t._v(" 结束（"),s("strong",[t._v("不包含结束位本身")]),t._v(")。")]),t._v(" "),s("li",[t._v("从头开始，"),s("strong",[t._v("开始索引")]),t._v(" "),s("strong",[t._v("数字可以省略，冒号不能省略")]),t._v("。")]),t._v(" "),s("li",[t._v("到末尾结束，"),s("strong",[t._v("结束索引")]),t._v(" "),s("strong",[t._v("数字可以省略，冒号不能省略")]),t._v("。")]),t._v(" "),s("li",[t._v("步长默认为 "),s("code",[t._v("1")]),t._v("，如果连续切片，"),s("strong",[t._v("数字和冒号都可以省略")]),t._v("。")]),t._v(" "),s("li",[t._v("在 Python 中不仅支持 "),s("strong",[t._v("顺序索引")]),t._v("，同时还支持 "),s("strong",[t._v("倒序索引")]),t._v("，所谓倒序索引就是 "),s("strong",[t._v("从右向左")]),t._v(" 计算索引,最右边的索引值是 "),s("strong",[t._v("-1")]),t._v("，依次递减。")])]),t._v(" "),s("h3",{attrs:{id:"公共方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#公共方法"}},[t._v("#")]),t._v(" 公共方法")]),t._v(" "),s("h4",{attrs:{id:"切片"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#切片"}},[t._v("#")]),t._v(" 切片")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("描述")]),t._v(" "),s("th",[t._v("Python表达式")]),t._v(" "),s("th",[t._v("结果")]),t._v(" "),s("th",[t._v("支持的数据类型")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("切片")]),t._v(" "),s("td",[t._v('"0123456789"[::-2]')]),t._v(" "),s("td",[t._v('"97531"')]),t._v(" "),s("td",[t._v("字符串、列表、元组")])])])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("切片")]),t._v(" 使用 "),s("strong",[t._v("索引值")]),t._v(" 来限定范围，从一个大的 "),s("strong",[t._v("字符串")]),t._v(" 中 "),s("strong",[t._v("切出")]),t._v(" 小的 "),s("strong",[t._v("字符串")])]),t._v(" "),s("li",[s("strong",[t._v("列表")]),t._v(" 和 "),s("strong",[t._v("元组")]),t._v(" 都是 "),s("strong",[t._v("有序")]),t._v(" 的集合，都能够 "),s("strong",[t._v("通过索引值")]),t._v(" 获取到对应的数据")]),t._v(" "),s("li",[s("strong",[t._v("字典")]),t._v(" 是一个 "),s("strong",[t._v("无序")]),t._v(" 的集合，是使用 "),s("strong",[t._v("键值对")]),t._v(" 保存数据")])]),t._v(" "),s("h4",{attrs:{id:"运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[t._v("#")]),t._v(" 运算符")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("运算符")]),t._v(" "),s("th",[t._v("Python 表达式")]),t._v(" "),s("th",[t._v("结果")]),t._v(" "),s("th",[t._v("描述")]),t._v(" "),s("th",[t._v("支持的数据类型")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("+")]),t._v(" "),s("td",[t._v("[1, 2] + [3, 4]")]),t._v(" "),s("td",[t._v("[1, 2, 3, 4]")]),t._v(" "),s("td",[t._v("合并")]),t._v(" "),s("td",[t._v("字符串、列表、元组")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("*")]),t._v(" "),s("td",[t._v('["Hi!"] * 4')]),t._v(" "),s("td",[t._v("['Hi!', 'Hi!', 'Hi!', 'Hi!']")]),t._v(" "),s("td",[t._v("重复")]),t._v(" "),s("td",[t._v("字符串、列表、元组")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("in")]),t._v(" "),s("td",[t._v("3 in (1, 2, 3)")]),t._v(" "),s("td",[t._v("True")]),t._v(" "),s("td",[t._v("元素是否存在")]),t._v(" "),s("td",[t._v("字符串、列表、元组、字典")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("not in")]),t._v(" "),s("td",[t._v("4 not in (1, 2, 3)")]),t._v(" "),s("td",[t._v("True")]),t._v(" "),s("td",[t._v("元素是否不存在")]),t._v(" "),s("td",[t._v("字符串、列表、元组、字典")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("> >= == < <=")]),t._v(" "),s("td",[t._v("(1, 2, 3) < (2, 2, 3)")]),t._v(" "),s("td",[t._v("True")]),t._v(" "),s("td",[t._v("元素比较")]),t._v(" "),s("td",[t._v("字符串、列表、元组")])])])]),t._v(" "),s("p",[s("strong",[t._v("注意")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("in")]),t._v(" 在对 "),s("strong",[t._v("字典")]),t._v(" 操作时，判断的是 "),s("strong",[t._v("字典的键")])]),t._v(" "),s("li",[s("code",[t._v("in")]),t._v(" 和 "),s("code",[t._v("not in")]),t._v(" 被称为 "),s("strong",[t._v("成员运算符")])])]),t._v(" "),s("p",[s("strong",[t._v("成员运算符")])]),t._v(" "),s("p",[t._v("成员运算符用于 "),s("strong",[t._v("测试")]),t._v(" 序列中是否包含指定的 "),s("strong",[t._v("成员")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("运算符")]),t._v(" "),s("th",[t._v("描述")]),t._v(" "),s("th",[t._v("实例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("in")]),t._v(" "),s("td",[t._v("如果在指定的序列中找到值返回 True，否则返回 False")]),t._v(" "),s("td",[s("code",[t._v("3 in (1, 2, 3)")]),t._v(" 返回 "),s("code",[t._v("True")])])]),t._v(" "),s("tr",[s("td",[t._v("not in")]),t._v(" "),s("td",[t._v("如果在指定的序列中没有找到值返回 True，否则返回 False")]),t._v(" "),s("td",[s("code",[t._v("3 not in (1, 2, 3)")]),t._v(" 返回 "),s("code",[t._v("False")])])])])]),t._v(" "),s("p",[t._v("注意：在对 "),s("strong",[t._v("字典")]),t._v(" 操作时，判断的是 "),s("strong",[t._v("字典的键")])]),t._v(" "),s("h4",{attrs:{id:"完整的-for-循环语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#完整的-for-循环语法"}},[t._v("#")]),t._v(" 完整的 for 循环语法")]),t._v(" "),s("ul",[s("li",[t._v("在 "),s("code",[t._v("Python")]),t._v(" 中完整的 "),s("code",[t._v("for 循环")]),t._v(" 的语法如下：")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" 变量 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" 集合"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    循环体代码\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    没有通过 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v(" 退出循环，循环结束后，会执行的代码\n")])])]),s("p",[t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 要判断 某一个字典中 是否存在指定的值")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果存在，提示并且退出循环")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果不存在，在循环整体结束后，希望得到一个统一的提示")]),t._v("\n\nstudents "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"阿土"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"age"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gender"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"height"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"weight"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("75.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"小美"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"age"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gender"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"height"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"weight"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("45.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nfind_name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"阿土"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" stu_dict "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" students"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stu_dict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 判断当前遍历的字典中姓名是否为find_name")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" stu_dict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" find_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"找到了"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果已经找到，直接退出循环，就不需要再对后续的数据进行比较")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"没有找到"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"循环结束"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"函数进阶"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数进阶"}},[t._v("#")]),t._v(" 函数进阶")]),t._v(" "),s("h3",{attrs:{id:"参数传递问题-可变类型和不可变类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参数传递问题-可变类型和不可变类型"}},[t._v("#")]),t._v(" 参数传递问题——可变类型和不可变类型")]),t._v(" "),s("p",[t._v("在python函数的参数传递过程中，python中的一切都是对象，包括变量，而变量是没有类型的，不像c++定义变量时一定要写类型。"),s("br"),t._v("\n引入：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\na"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Runoob"')]),t._v("\n")])])]),s("p",[t._v("在上面引入中，[1,2,3] 是 List 类型，“Runoob” 是 String 类型，而变量 a 是没有类型，它仅仅是一个对象的引用（一个指针），可以是 List 类型对象，也可以指向 String 类型对象。")]),t._v(" "),s("p",[s("strong",[t._v("不可变类型")]),t._v("：对象所指向的内存中的值不能被改变，当改变这个变量的时候，原来指向的内存中的值不变，变量不再指向原来的值，而是开辟一块新的内存，变量指向新的内存。")]),t._v(" "),s("div",{attrs:{align:"center"}},[s("img",{attrs:{src:a(302),width:"80%"}})]),t._v(" "),s("p",[s("strong",[t._v("可变类型")]),t._v("：对象指向的内存中的值会改变，当更改这个变量的时候，还是指向原来内存中的值，并且在原来的内存值进行原地修改，并没有开辟新的内存。"),s("br"),t._v("\n例子：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("llist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 例如结果为67021832")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [1, 2, 5, 4]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 67021832，也就是说内存地址没变")]),t._v("\n")])])]),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("不可更改的对象")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("可以修改的对象")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("strings")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("list")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("tuples")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("dict")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("numbers")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("-")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("-")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("float")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("-")])])])]),t._v(" "),s("p",[s("strong",[t._v("不可变类型")]),t._v("：类似 c++ 的值传递，如fun（a），传递的只是a的值，没有影响 a 对象本身。在 fun（a）内部修改 a 的值，只是修改另一个复制的对象，不会影响 a 本身。"),s("br"),t._v(" "),s("strong",[t._v("可变类型")]),t._v("：类似 c++ 的引用传递，如 fun（list），则是将 list 真正的传过去，修改后 fun 外部的 list 也会受影响。")]),t._v(" "),s("p",[t._v("本小节参考"),s("a",{attrs:{href:"https://blog.csdn.net/weixin_45523086/article/details/105105068",target:"_blank",rel:"noopener noreferrer"}},[t._v("此文章"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"缺省参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缺省参数"}},[t._v("#")]),t._v(" 缺省参数")]),t._v(" "),s("ul",[s("li",[t._v("定义函数时，可以给 "),s("strong",[t._v("某个参数")]),t._v(" 指定一个"),s("strong",[t._v("默认值")]),t._v("，具有默认值的参数就叫做 "),s("strong",[t._v("缺省参数")])]),t._v(" "),s("li",[t._v("调用函数时，如果没有传入 "),s("strong",[t._v("缺省参数")]),t._v(" 的值，则在函数内部使用定义函数时指定的 "),s("strong",[t._v("参数默认值")])]),t._v(" "),s("li",[t._v("函数的缺省参数，"),s("strong",[t._v("将常见的值设置为参数的缺省值")]),t._v("，从而 "),s("strong",[t._v("简化函数的调用")])])]),t._v(" "),s("h4",{attrs:{id:"指定函数的缺省参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指定函数的缺省参数"}},[t._v("#")]),t._v(" 指定函数的缺省参数")]),t._v(" "),s("ul",[s("li",[t._v("在参数后使用赋值语句，可以指定参数的缺省值")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print_info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gender"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    gender_text "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"男生"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" gender"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        gender_text "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"女生"')]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%s 是 %s"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gender_text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("strong",[t._v("提示")])]),t._v(" "),s("ul",[s("li",[t._v("缺省参数，需要使用 "),s("strong",[t._v("最常见的值")]),t._v(" 作为默认值！")]),t._v(" "),s("li",[t._v("如果一个参数的值 "),s("strong",[t._v("不能确定")]),t._v("，则不应该设置默认值，具体的数值在调用函数时，由外界传递！")])]),t._v(" "),s("h4",{attrs:{id:"缺省参数的注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缺省参数的注意事项"}},[t._v("#")]),t._v(" 缺省参数的注意事项")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("必须保证带有默认值的缺省参数在参数列表末尾")])]),t._v(" "),s("li",[t._v("在 "),s("strong",[t._v("调用函数时")]),t._v("，如果有 "),s("strong",[t._v("多个缺省参数")]),t._v("，"),s("strong",[t._v("需要指定参数名")]),t._v("，这样解释器才能够知道参数的对应关系！")])]),t._v(" "),s("h3",{attrs:{id:"多值参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多值参数"}},[t._v("#")]),t._v(" 多值参数")]),t._v(" "),s("h4",{attrs:{id:"定义支持多值参数的函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义支持多值参数的函数"}},[t._v("#")]),t._v(" 定义支持多值参数的函数")]),t._v(" "),s("ul",[s("li",[t._v("有时可能需要 "),s("strong",[t._v("一个函数")]),t._v(" 能够处理的参数 "),s("strong",[t._v("个数")]),t._v(" 是不确定的，这个时候，就可以使用 "),s("strong",[t._v("多值参数")])]),t._v(" "),s("li",[s("code",[t._v("python")]),t._v(" 中有 "),s("strong",[t._v("两种")]),t._v(" 多值参数：\n"),s("ul",[s("li",[t._v("参数名前增加 "),s("strong",[t._v("一个")]),t._v(" "),s("code",[t._v("*")]),t._v(" 可以接收 "),s("strong",[t._v("元组")])]),t._v(" "),s("li",[t._v("参数名前增加 "),s("strong",[t._v("两个")]),t._v(" "),s("code",[t._v("*")]),t._v(" 可以接收 "),s("strong",[t._v("字典")])])])]),t._v(" "),s("li",[t._v("一般在给多值参数命名时，"),s("strong",[t._v("习惯")]),t._v("使用以下两个名字\n"),s("ul",[s("li",[s("code",[t._v("*args")]),t._v(" —— 存放 "),s("strong",[t._v("元组")]),t._v(" 参数，前面有一个 "),s("code",[t._v("*")])]),t._v(" "),s("li",[s("code",[t._v("**kwargs")]),t._v(" —— 存放 "),s("strong",[t._v("字典")]),t._v(" 参数，前面有两个 "),s("code",[t._v("*")])])])])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("demo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ndemo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"小明"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gender"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (2, 3, 4, 5)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# {'name': '小明', 'age': 18, 'gender': True}")]),t._v("\n")])])]),s("h4",{attrs:{id:"元组和字典的拆包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元组和字典的拆包"}},[t._v("#")]),t._v(" 元组和字典的拆包")]),t._v(" "),s("ul",[s("li",[t._v("在调用带有多值参数的函数时，如果希望：\n"),s("ul",[s("li",[t._v("将一个 "),s("strong",[t._v("元组变量")]),t._v("，直接传递给 "),s("code",[t._v("args")])]),t._v(" "),s("li",[t._v("将一个 "),s("strong",[t._v("字典变量")]),t._v("，直接传递给 "),s("code",[t._v("kwargs")])])])]),t._v(" "),s("li",[t._v("就可以使用 "),s("strong",[t._v("拆包")]),t._v("，简化参数的传递，"),s("strong",[t._v("拆包")]),t._v(" 的方式是：\n"),s("ul",[s("li",[t._v("在 "),s("strong",[t._v("元组变量前")]),t._v("，增加 "),s("strong",[t._v("一个")]),t._v(" "),s("code",[t._v("*")])]),t._v(" "),s("li",[t._v("在 "),s("strong",[t._v("字典变量前")]),t._v("，增加 "),s("strong",[t._v("两个")]),t._v(" "),s("code",[t._v("*")])])])])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("demo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ngl_nums "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ngl_xiaoming "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"小明"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"age"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ndemo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("gl_nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("gl_xiaoming"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"全局变量和局部变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局变量和局部变量"}},[t._v("#")]),t._v(" 全局变量和局部变量")]),t._v(" "),s("p",[s("strong",[t._v("注意")]),t._v("：函数执行时，"),s("strong",[t._v("需要处理变量时")]),t._v(" 会：")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("首先")]),t._v(" 查找 "),s("strong",[t._v("函数内部")]),t._v(" 是否存在 "),s("strong",[t._v("指定名称 的局部变量")]),t._v("，"),s("strong",[t._v("如果有，直接使用")])]),t._v(" "),s("li",[t._v("如果没有，查找 "),s("strong",[t._v("函数外部")]),t._v(" 是否存在 "),s("strong",[t._v("指定名称 的全局变量")]),t._v("，"),s("strong",[t._v("如果有，直接使用")])]),t._v(" "),s("li",[t._v("如果还没有，程序报错！")])]),t._v(" "),s("h4",{attrs:{id:"函数不能直接修改-全局变量的引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数不能直接修改-全局变量的引用"}},[t._v("#")]),t._v(" 函数不能直接修改 "),s("code",[t._v("全局变量的引用")])]),t._v(" "),s("ul",[s("li",[t._v("在函数内部，可以 "),s("strong",[t._v("通过全局变量的引用获取对应的数据")])]),t._v(" "),s("li",[t._v("但是，"),s("strong",[t._v("不允许直接修改全局变量的引用")]),t._v(" —— 使用赋值语句修改全局变量的值")])]),t._v(" "),s("h4",{attrs:{id:"在函数内部修改全局变量的值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在函数内部修改全局变量的值"}},[t._v("#")]),t._v(" 在函数内部修改全局变量的值")]),t._v(" "),s("ul",[s("li",[t._v("如果在函数中需要修改全局变量，需要使用 "),s("code",[t._v("global")]),t._v(" 进行声明")])]),t._v(" "),s("h4",{attrs:{id:"全局变量定义的位置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局变量定义的位置"}},[t._v("#")]),t._v(" 全局变量定义的位置")]),t._v(" "),s("ul",[s("li",[t._v("为了保证所有的函数都能够正确使用到全局变量，应该 "),s("strong",[t._v("将全局变量定义在其他函数的上方")])])]),t._v(" "),s("h4",{attrs:{id:"全局变量命名的建议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局变量命名的建议"}},[t._v("#")]),t._v(" 全局变量命名的建议")]),t._v(" "),s("ul",[s("li",[t._v("为了避免局部变量和全局变量出现混淆，在定义全局变量时，有些公司会有一些开发要求，例如：全局变量名前应该增加 "),s("code",[t._v("g_")]),t._v(" 或者 "),s("code",[t._v("gl_")]),t._v(" 的前缀")])])])}),[],!1,null,null,null);s.default=_.exports}}]);