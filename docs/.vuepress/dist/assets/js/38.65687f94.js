(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{467:function(t,s,a){"use strict";a.r(s);var n=a(8),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"常用函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用函数"}},[t._v("#")]),t._v(" 常用函数")]),t._v(" "),s("h2",{attrs:{id:"基本函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本函数"}},[t._v("#")]),t._v(" 基本函数")]),t._v(" "),s("h3",{attrs:{id:"sort函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sort函数"}},[t._v("#")]),t._v(" sort函数")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("B=sort(A)")]),s("br"),t._v("\n对一维或二维数组进行升序排序,并返回排序后的数组,当A为二维时,对数组每一列进行排序。")])]),t._v(" "),s("div",{staticClass:"language-matlab extra-class"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" A"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nans "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" A"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nans "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("B=sort(A, dim)")]),s("br"),t._v("\n对数组按指定方向进行升序排序，dim =1，表示对每一列进行排序，dim=2表示对每一行进行排序。")]),t._v(" "),s("li",[s("code",[t._v("B=sort(A, dim, mode)")]),s("br"),t._v('\nmode为指定排序模式，mode为 "ascend" 时，进行升序排序，为 "descend " 时，进行降序排序。')]),t._v(" "),s("li",[s("code",[t._v("[B, I]=sort(A, .....)")]),s("br"),t._v("\nI 为返回的排序后元素在原数组中的行位置或列位置。")])]),t._v(" "),s("h3",{attrs:{id:"blanks函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#blanks函数"}},[t._v("#")]),t._v(" blanks函数")]),t._v(" "),s("p",[t._v("blanks函数用于创建空白字符数组，"),s("code",[t._v("chr = blanks(n)")]),t._v(" 返回由空白字符组成的 1×n 数组。")]),t._v(" "),s("div",{staticClass:"language-matlab extra-class"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("blanks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" chr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'|'")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'|'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nchr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'|     |'")]),t._v("\n")])])]),s("h3",{attrs:{id:"unique函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unique函数"}},[t._v("#")]),t._v(" unique函数")]),t._v(" "),s("p",[t._v("unique函数用于去掉矩阵中重复的元素。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("B = unique（A）")]),s("br"),t._v("\n获取矩阵A的不同元素构成的向量，其中B可能是行向量也可能是列向量,产生的结果向量按升序排列。如果A是一个数组，那么返回的是A不重复的行。B的行是按顺序排列的。")]),t._v(" "),s("li",[s("code",[t._v("B = unique（A，'rows'）")]),s("br"),t._v("\n获取矩阵A的不同行向量构成的矩阵。")]),t._v(" "),s("li",[s("code",[t._v("[ C,IA,IC ] = unique(A)")]),s("br"),t._v("\nIA为矩阵C中的元素在矩阵A中的位置，IC为矩阵A中的元素在矩阵C中的位置。")])]),t._v(" "),s("h3",{attrs:{id:"findstr函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#findstr函数"}},[t._v("#")]),t._v(" findstr函数")]),t._v(" "),s("p",[s("code",[t._v("findstr(s1,s2)")]),t._v("在较长的字符串中查找较短的字符串出现的次数，并返回其位置，因此无论s1,s2哪个为长字符串，位置在前在后都没有关系。")]),t._v(" "),s("div",{staticClass:"language-matlab extra-class"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Find the starting indices of the shorter string.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findstr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'the'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nans "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findstr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'the'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nans "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\n")])])]),s("h3",{attrs:{id:"strfind函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#strfind函数"}},[t._v("#")]),t._v(" strfind函数")]),t._v(" "),s("p",[s("code",[t._v("strfind(s1,pattern)")]),t._v(" 在s1中搜索pattern。")]),t._v(" "),s("div",{staticClass:"language-matlab extra-class"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" S "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Find the starting indices of the pattern string'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strfind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("S"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'in'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nans "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("45")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strfind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("S"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'In'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nans "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h3",{attrs:{id:"数据类型转换函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型转换函数"}},[t._v("#")]),t._v(" 数据类型转换函数")]),t._v(" "),s("ul",[s("li",[t._v("整数转字符串"),s("br"),t._v(" "),s("code",[t._v("num2str(int1)")])]),t._v(" "),s("li",[t._v("小数转字符串"),s("br"),t._v(" "),s("code",[t._v("num2str(dec1,6)")]),t._v("，保留6位有效数"),s("br"),t._v(" "),s("code",[t._v("num2str(dec1,'%.6f')")]),t._v("，保留小数点后6位"),s("br"),t._v(" "),s("code",[t._v("dec2bin(A，n)")]),t._v("，此函数将A转换成n个字符组成的字符串表示的A的n位二进制数。如果实际转换成的二进制数的位数小于n，则其余位上为0，如果实际转换成的二进制数的位数大于n，则忽略此限制。")])]),t._v(" "),s("h3",{attrs:{id:"mean函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mean函数"}},[t._v("#")]),t._v(" mean函数")]),t._v(" "),s("p",[t._v("mean函数用于求数组的平均数或者均值。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("M = mean(A)")]),s("br"),t._v("\n返回数组中不同维元素的平均值。"),s("br"),t._v("\n如果A是一个向量，"),s("code",[t._v("mean(A)")]),t._v("返回A中元素的平均值。"),s("br"),t._v("\n如果A是一个矩阵，"),s("code",[t._v("mean(A)")]),t._v("将其中的各列视为向量，把矩阵中的每列看成一个向量，返回一个包含每一列所有元素的平均值的行向量。"),s("br"),t._v("\n如果A是一个多元数组，"),s("code",[t._v("mean(A)")]),t._v("将数组中第一个非单一维的值看成一个向量，返回每个向量的平均值。")]),t._v(" "),s("li",[s("code",[t._v("M = mean(A,dim)")]),s("br"),t._v("\n返回A中沿着标量dim指定的维数上的元素的平均值。对于矩阵，"),s("code",[t._v("mean(A,2)")]),t._v("就是包含每一行的平均值的列向量。")])]),t._v(" "),s("div",{staticClass:"language-matlab extra-class"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" A "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nans "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.0000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.5000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6.0000")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nans "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0000")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.0000")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6.0000")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6.0000")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nans"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n")])])]),s("h3",{attrs:{id:"size函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#size函数"}},[t._v("#")]),t._v(" size函数")]),t._v(" "),s("p",[t._v("size函数用于获取矩阵的行数和列数。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("s=size(A)")]),s("br"),t._v("\n当只有一个输出参数时，返回一个行向量，该行向量的第一个元素时矩阵的行数，第二个元素是矩阵的列数。")]),t._v(" "),s("li",[s("code",[t._v("[r,c]=size(A)")]),s("br"),t._v("\n当有两个输出参数时，size函数将矩阵的行数返回到第一个输出变量r，将矩阵的列数返回到第二个输出变量c。")]),t._v(" "),s("li",[s("code",[t._v("size(A,n)")]),s("br"),t._v("\n如果在size函数的输入参数中再添加一项n，并用1或2为n赋值，则 size将返回矩阵的行数或列数。"),s("br"),t._v("\n其中"),s("code",[t._v("r=size(A,1)")]),t._v("该语句返回的时矩阵A的行数， "),s("code",[t._v("c=size(A,2)")]),t._v(" 该语句返回的时矩阵A的列数。"),s("br"),t._v("\n另外，"),s("code",[t._v("length(A)=max(size(A))")]),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"nextpow2函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nextpow2函数"}},[t._v("#")]),t._v(" nextpow2函数")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("y = nextpow2(x)")]),s("br"),t._v("\n则2^y为大于等于x的最小的二的整数次幂的数字。"),s("br"),t._v("\n举个例子，如果x等于100，则y=7，因为2^7==128，128是所有大于100的2的整数次幂数字中最小的一个。"),s("br"),t._v("\n对于特殊的数值，下面一一解释："),s("br"),t._v("\n负数：如果x<0，则nextpow2(x)等效于nextpow2(abs(x))；"),s("br"),t._v("\n无穷大：如果x==inf或x==-inf，nextpow2(x)==inf"),s("br"),t._v("\nNaN：如果x==NaN，nextpow2(x)==NaN")])]),t._v(" "),s("h3",{attrs:{id:"audiowrite函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#audiowrite函数"}},[t._v("#")]),t._v(" audiowrite函数")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("audiowrite(filename,y,Fs)")]),s("br"),t._v("\n以采样率 Fs 将音频数据矩阵 y 写入名为 filename 的文件。filename 输入还指定了输出文件格式。输出数据类型取决于音频数据 y 的输出文件格式和数据类型。")]),t._v(" "),s("li",[s("code",[t._v("audiowrite(filename,y,Fs,Name,Value)")]),s("br"),t._v("\n使用一个或多个 Name,Value 对组参数指定的其他选项。")])]),t._v(" "),s("h3",{attrs:{id:"max函数和min函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#max函数和min函数"}},[t._v("#")]),t._v(" max函数和min函数")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("max(A)")]),t._v("：返回一个行向量，向量的第 i 个元素是矩阵A的第 i 列上的最大值。")]),t._v(" "),s("li",[s("code",[t._v("[Y,U]=max(A)")]),t._v("：返回行向量Y和U，Y向量记录A的每列的最大值，U向量记录每列最大值的行号。")]),t._v(" "),s("li",[s("code",[t._v("max(A,[],dim)")]),t._v("：dim取1或2。dim取1时，该函数和max(A)完全相同；dim取2时，该函数返回一个列向量，其第 i 个元素是A矩阵的第 i 行上的最大值。\n求最小值的函数是min，其用法和max完全相同。")])]),t._v(" "),s("h3",{attrs:{id:"toeplitz函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#toeplitz函数"}},[t._v("#")]),t._v(" toeplitz函数")]),t._v(" "),s("p",[t._v("toeplitz函数的功能是生成托普利兹（toeplitz）矩阵。"),s("br"),t._v("\n托普利兹矩阵的特点是：除第一行、第一列外，其他每个元素都与它左上角的元素相同。"),s("br"),t._v("\n调用格式："),s("code",[t._v("A=toeplitz(第1列元素数组，第1行元素数组）")])]),t._v(" "),s("div",{staticClass:"language-matlab extra-class"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" clear\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" A"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toeplitz")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nA "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),s("p",[t._v("注意：第1行的第1个元素应与第1列的第1个元素相同，否则第1行的第一个元素将自动改为1列的第1个元素。")]),t._v(" "),s("h3",{attrs:{id:"sign函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sign函数"}},[t._v("#")]),t._v(" sign函数")]),t._v(" "),s("p",[t._v("sign本身就有就有符号标志之意，故sign为符号函数！"),s("br"),t._v("\nx>0时，sgn(x)=1；"),s("br"),t._v("\nx<0时，sgn(x)=-1；"),s("br"),t._v("\nx=0时，sgn(x)=0。")]),t._v(" "),s("h2",{attrs:{id:"小波常用函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小波常用函数"}},[t._v("#")]),t._v(" 小波常用函数")]),t._v(" "),s("h3",{attrs:{id:"wavedec函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wavedec函数"}},[t._v("#")]),t._v(" wavedec函数")]),t._v(" "),s("p",[s("code",[t._v("[C,L] = wavedec(X,N,'wname')")]),s("br"),t._v("\n这个会返回信号X在level N（小波分解级数）的小波分解系数。\n输出为两部分，第一部分C为小波分解系数（是一个矩阵形式），而L则是表示相应小波系数的个数（矩阵内系数的个数）。")]),t._v(" "),s("h3",{attrs:{id:"appcoef函数和detcoef函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#appcoef函数和detcoef函数"}},[t._v("#")]),t._v(" appcoef函数和detcoef函数")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("appcoef")]),t._v("：提取离散小波变换（DWT）后小波的逼近系数,低频系数。"),s("br"),t._v(" "),s("code",[t._v("A=appcoef(c,l,'wname',N)")]),t._v("：计算尺度为N时的低频系数。")]),t._v(" "),s("li",[s("code",[t._v("detcoef")]),t._v("：提取DWT后小波的细节系数，高频系数。"),s("br"),t._v(" "),s("code",[t._v("D=detcoef(c,l,N)")]),t._v(":提取尺度为N时的高频系数。"),s("br"),t._v("\n换句话说，app是近似，也就是信号的低频部分，dec是细节，也就是信号的高频部分，"),s("code",[t._v("appcoef(s)")]),t._v("就是信号s的低频系数，"),s("code",[t._v("deccoef(s)")]),t._v("就是信号的高频系数？（不知正确与否）")])]),t._v(" "),s("div",{staticClass:"language-matlab extra-class"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%用db4小波读入的声音文件进行一维三级小波分解")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("l"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wavedec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'db4'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%提取三级小波分解的低频系数和高频系数")]),t._v("\nca3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("appcoef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("l"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'db4'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%3级低频系数")]),t._v("\ncd3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("detcoef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("l"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%3级高频系数")]),t._v("\ncd2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("detcoef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("l"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%2级高频系数")]),t._v("\ncd1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("detcoef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("l"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%1级高频系数")]),t._v("\n")])])]),s("h3",{attrs:{id:"waverec函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#waverec函数"}},[t._v("#")]),t._v(" waverec函数")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("x=waverec(c,l,'wname')")]),s("br"),t._v("\n用指定的小波'wname'对小波分解结构(c,l)进行多尺度一维小波重构。")])]),t._v(" "),s("h3",{attrs:{id:"wnoisest函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wnoisest函数"}},[t._v("#")]),t._v(" wnoisest函数")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("STDC=wnoisest(c,l,s)")]),s("br"),t._v("\n返回(c,l)在尺度s上的细节系数（高频系数）的标准差估计")])]),t._v(" "),s("h3",{attrs:{id:"wbmpen函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wbmpen函数"}},[t._v("#")]),t._v(" wbmpen函数")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("THR=wbmpen(C,L,SIGMA,ALPHA)")]),s("br"),t._v("\n使用penalization方法返回去噪的全局阈值THR。THR通过给定的一种小波系数选择规则计算得到，小波系数选择规则使用Birge-Massart的处罚算法。"),s("br"),t._v("\n[C,L]是进行去噪的信号或图像的小波分解结构；"),s("br"),t._v("\nSIGMA是零均值的高斯白噪声的标准偏差；"),s("br"),t._v("\nALPHA是用于处罚的调整参数，它必须是一个大于1的实数，一般去ALPHA=2。"),s("br"),t._v("\n设 t 使"),s("code",[t._v("crit(t)=-sum(c(k)^2,k<=t) + 2 * SIGMA^2 * t*(ALPHA+log(n/t))")]),t._v("的最小值，其中"),s("code",[t._v("c(k)")]),t._v("是按绝对值从大到小排列的小波包系数，n是系数的个数，则"),s("code",[t._v("THR=|c(t*)|")]),t._v("。")]),t._v(" "),s("li",[s("code",[t._v("wbmpen(C,L,SIGMA,ALPHA,ARG)")]),t._v("  :计算阈值并画出三条曲线。")])]),t._v(" "),s("h3",{attrs:{id:"wdcbm函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wdcbm函数"}},[t._v("#")]),t._v(" wdcbm函数")]),t._v(" "),s("p",[t._v("wdcbm的调用格式有以下两种：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("[THR,NKEEP]=wdcbm(C,L,ALPHA);")])]),t._v(" "),s("li",[s("code",[t._v("[THR,NKEEP]=wdcbm(C,L,ALPHA,M);")]),s("br"),t._v("\nwdcbm函数是使用Birge-Massart算法获取一维小波变换的阈值。"),s("br"),t._v("\n返回值"),s("code",[t._v("THR")]),t._v("是与尺度无关的阈值，"),s("code",[t._v("NKEEP")]),t._v("是系数的个数。"),s("br"),t._v(" "),s("code",[t._v("[C,L]")]),t._v("是要进行压缩或消噪的信号在"),s("code",[t._v("j=length(L)-2")]),t._v("层的分解结构；"),s("code",[t._v("LAPHA")]),t._v("和"),s("code",[t._v("M")]),t._v("必须是大于1的实数；"),s("br"),t._v(" "),s("code",[t._v("THR")]),t._v("是关于 j 的向量，"),s("code",[t._v("THR（i)")]),t._v("是第 i 层的阈值；"),s("br"),t._v(" "),s("code",[t._v("NKEEP")]),t._v("也是关于 j 的向量，"),s("code",[t._v("NKEEP(i)")]),t._v("是第 i 层的系数个数。"),s("br"),t._v("\n一般压缩时"),s("code",[t._v("ALPHA")]),t._v("取1.5，去噪时"),s("code",[t._v("ALPHA")]),t._v("取3.")])]),t._v(" "),s("h3",{attrs:{id:"ddencmp函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ddencmp函数"}},[t._v("#")]),t._v(" ddencmp函数")]),t._v(" "),s("p",[t._v("ddencmp的调用格式有以下三种：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("[THR,SORH,KEEPAPP,CRIT]=ddencmp(IN1,IN2,X)")])]),t._v(" "),s("li",[s("code",[t._v("[THR,SORH,KEEPAPP,CRIT]=ddencmp(IN1,'wp',X)")])]),t._v(" "),s("li",[s("code",[t._v("[THR,SORH,KEEPAPP,CRIT]=ddencmp(IN1,'wv',X)")]),s("br"),t._v("\nddencmp函数用于获取信号在消噪或压缩过程中的默认阈值。"),s("br"),t._v("\n输入参数X为一维或二维信号；IN1取值为'den'或'cmp'，'den'表示进行去噪，'cmp'表示进行压缩；IN2取值为'wv'或'wp'，wv表示选择小波，wp表示选择小波包。"),s("br"),t._v("\n返回值THR是返回的阈值；SORH是软阈值或硬阈值选择参数；KEEPAPP表示保存低频信号；CRIT是熵名（只在选择小波包时使用）。")])]),t._v(" "),s("h3",{attrs:{id:"thselect函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#thselect函数"}},[t._v("#")]),t._v(" thselect函数")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("THR=thselect(X,TPTR);")]),s("br"),t._v("\n根据字符串"),s("code",[t._v("TPTR")]),t._v("定义的阈值选择规则来选择信号X的自适应阈值。"),s("br"),t._v("\n自适应阈值的选择规则包括以下四种："),s("br"),t._v(" "),s("code",[t._v("*TPTR='rigrsure'")]),t._v("自适应阈值选择使用Stein的无偏风险估计原理。"),s("br"),t._v(" "),s("code",[t._v("*TPTR='heursure'")]),t._v("使用启发式阈值选择。"),s("br"),t._v(" "),s("code",[t._v("*TPTR='sqtwolog'")]),t._v("阈值等于"),s("code",[t._v("sqrt(2*log(length(X)))")]),t._v("。"),s("br"),t._v(" "),s("code",[t._v("*TPTR='minimaxi'")]),t._v("用极大极小原理选择阈值。"),s("br"),t._v("\n阈值选择规则基于模型 "),s("code",[t._v("y = f(t) + e")]),t._v("，e是高斯白噪声N(0,1)。")])]),t._v(" "),s("h3",{attrs:{id:"wthresh函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wthresh函数"}},[t._v("#")]),t._v(" wthresh函数")]),t._v(" "),s("p",[t._v("函数wthresh的调用格式如下：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Y=wthresh(X,SORH,T)")]),s("br"),t._v("\n返回输入向量或矩阵 X 经过软阈值（"),s("code",[t._v("SORH='s'")]),t._v("）或硬阈值（"),s("code",[t._v("SORH='h'")]),t._v("）处理后的信号。T是阈值。"),s("br"),t._v(" "),s("code",[t._v("Y=wthresh(X,'s',T)")]),t._v("返回的是"),s("code",[t._v("Y=SIG(X)*(|X|-T)+")]),t._v("，即把信号的绝对值与阈值进行比较，小于或等于阈值的点变为零，大于阈值的点为该点值与阈值的差值。"),s("br"),t._v(" "),s("code",[t._v("Y=wthresh(X,'h',T)")]),t._v("返回的是"),s("code",[t._v("Y=X*1(|X|>T)")]),t._v("，即把信号的绝对值和阈值进行比较，小于或等于阈值的点变为零，大于阈值的点保持不变。一般来说，用硬阈值处理后的信号比用软阈值处理后的信号更粗糙。")])]),t._v(" "),s("h3",{attrs:{id:"wthcoef函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wthcoef函数"}},[t._v("#")]),t._v(" wthcoef函数")]),t._v(" "),s("p",[t._v("函数wthcoef用于一维信号小波系数的阈值处理,调用格式下面四种：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("NC=wthcoef('d',C,L,N,P);")])]),t._v(" "),s("li",[s("code",[t._v("NC=wthcoef('d',C,L,N);")])]),t._v(" "),s("li",[s("code",[t._v("NC=wthcoef('a',C,L);")])]),t._v(" "),s("li",[s("code",[t._v("NC=wthcoef('t',C,L,N,T,SORH);")]),s("br"),t._v("\n格式（1）返回小波分解结构[C,L]经向量N和P定义的压缩率处理后的新的小波分解向量NC，[NC,L]构成一个新的小波分解结构。N包含被压缩的细节向量，P是把较小系数置0的百分比信息的向量。N和P的长度必须相同，向量N必须满足"),s("code",[t._v("1<=N(i)<=length(L)-2")]),t._v("。"),s("br"),t._v("\n格式（2）返回小波分解结构[C,L]经过向量N中指定的细节系数置0后的小波分解向量NC。"),s("br"),t._v("\n格式（3）返回小波分解结构[C,L]经过近似系数置0后的小波分解向量NC。"),s("br"),t._v("\n格式（4）返回小波分解结构[C,L]经过将向量N作阈值处理后的小波分解向量NC。如果"),s("code",[t._v("SORH='s'")]),t._v("，则为软阈值；如果"),s("code",[t._v("SORH='h'")]),t._v("则为硬阈值。N包含细节的尺度向量，T是N相对应的阈值向量。N和T的长度必须相等。")])]),t._v(" "),s("h2",{attrs:{id:"图像常用函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图像常用函数"}},[t._v("#")]),t._v(" 图像常用函数")]),t._v(" "),s("h3",{attrs:{id:"imhist函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#imhist函数"}},[t._v("#")]),t._v(" imhist函数")]),t._v(" "),s("p",[t._v("功能：显示图像数据的柱状图。"),s("br"),t._v("\n语法："),s("code",[t._v("imhist(I)")]),t._v(";")]),t._v(" "),s("h3",{attrs:{id:"imfinfo函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#imfinfo函数"}},[t._v("#")]),t._v(" imfinfo函数")]),t._v(" "),s("p",[t._v("功能：返回图形文件信息。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("info = imfinfo(filename,fmt)；")])]),t._v(" "),s("li",[s("code",[t._v("info = imfinfo(filename)；")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);